#ifndef MULTIPLIER_8_HPP
#define MULTIPLIER_8_HPP


#include "../adder_8/ADDER_8.hpp"

class MULTIPLIER_8: public COMPONENT{

public:
  
  std::vector<BUFFER*> output_list;

  //port 0
  OUTPUT_PORT P0;

  //inputs
  I_BUFFER INPUT_BUFFER_A0;
  I_BUFFER INPUT_BUFFER_A1;
  I_BUFFER INPUT_BUFFER_A2;
  I_BUFFER INPUT_BUFFER_A3;
  I_BUFFER INPUT_BUFFER_A4;
  I_BUFFER INPUT_BUFFER_A5;
  I_BUFFER INPUT_BUFFER_A6;
  I_BUFFER INPUT_BUFFER_A7;

  I_BUFFER INPUT_BUFFER_B0;
  I_BUFFER INPUT_BUFFER_B1;
  I_BUFFER INPUT_BUFFER_B2;
  I_BUFFER INPUT_BUFFER_B3;
  I_BUFFER INPUT_BUFFER_B4;
  I_BUFFER INPUT_BUFFER_B5;
  I_BUFFER INPUT_BUFFER_B6;
  I_BUFFER INPUT_BUFFER_B7;

  //outputs
  BUFFER OUTPUT_BUFFER_MULT_0;
  BUFFER OUTPUT_BUFFER_MULT_1;
  BUFFER OUTPUT_BUFFER_MULT_2;
  BUFFER OUTPUT_BUFFER_MULT_3;
  BUFFER OUTPUT_BUFFER_MULT_4;
  BUFFER OUTPUT_BUFFER_MULT_5;
  BUFFER OUTPUT_BUFFER_MULT_6;
  BUFFER OUTPUT_BUFFER_MULT_7;

  BUFFER OUTPUT_BUFFER_MULT_8;
  BUFFER OUTPUT_BUFFER_MULT_9;
  BUFFER OUTPUT_BUFFER_MULT_10;
  BUFFER OUTPUT_BUFFER_MULT_11;
  BUFFER OUTPUT_BUFFER_MULT_12;
  BUFFER OUTPUT_BUFFER_MULT_13;
  BUFFER OUTPUT_BUFFER_MULT_14;
  BUFFER OUTPUT_BUFFER_MULT_15;

  //logic
  AND AND_0;



  //to ADDER_8_0
  AND AND_1;
  AND AND_2;
  AND AND_3;
  AND AND_4;
  AND AND_5;
  AND AND_6;
  AND AND_7;

  AND AND_8;
  AND AND_9;
  AND AND_10;
  AND AND_11;
  AND AND_12;
  AND AND_13;
  AND AND_14;
  AND AND_15;



  //to ADDER_8_1
  AND AND_16;
  AND AND_17;
  AND AND_18;
  AND AND_19;
  AND AND_20;
  AND AND_21;
  AND AND_22;
  AND AND_23;



  //to ADDER_8_2
  AND AND_24;
  AND AND_25;
  AND AND_26;
  AND AND_27;
  AND AND_28;
  AND AND_29;
  AND AND_30;
  AND AND_31;



  //to ADDER_8_3
  AND AND_32;
  AND AND_33;
  AND AND_34;
  AND AND_35;
  AND AND_36;
  AND AND_37;
  AND AND_38;
  AND AND_39;



  //to ADDER_8_4
  AND AND_40;
  AND AND_41;
  AND AND_42;
  AND AND_43;
  AND AND_44;
  AND AND_45;
  AND AND_46;
  AND AND_47;



  //to ADDER_8_5
  AND AND_48;
  AND AND_49;
  AND AND_50;
  AND AND_51;
  AND AND_52;
  AND AND_53;
  AND AND_54;
  AND AND_55;



  //to ADDER_8_6
  AND AND_56;
  AND AND_57;
  AND AND_58;
  AND AND_59;
  AND AND_60;
  AND AND_61;
  AND AND_62;
  AND AND_63;







  ADDER_8 ADDER_8_0;
  ADDER_8 ADDER_8_1;
  ADDER_8 ADDER_8_2;
  ADDER_8 ADDER_8_3;
  ADDER_8 ADDER_8_4;
  ADDER_8 ADDER_8_5;
  ADDER_8 ADDER_8_6;


  //update function
  void update_output(std::queue<COMPONENT*> &external_update_queue);


  //constructor
  MULTIPLIER_8();


};



#endif
